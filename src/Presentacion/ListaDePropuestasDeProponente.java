/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import static Presentacion.inicio.Escritorio;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logica.Clases.DtConsultaPropuesta;
import logica.Clases.DtProponente;
import logica.Clases.DtinfoColaborador;
import logica.Clases.DtinfoPropuesta;
import logica.Clases.EstadoPropuesta;
import logica.Clases.Proponente;
import logica.Clases.TipoRetorno;
import logica.Clases.Usuario;
import logica.Controladores.ControladorPropCat;
import logica.Controladores.ControladorUsuario;
import logica.Fabrica;
import logica.Interfaces.IControladorUsuario;
import logica.Interfaces.IPropCat;

/**
 *
 * @author Lucas
 */
public class ListaDePropuestasDeProponente extends javax.swing.JInternalFrame {

    /**
     * Creates new form ListaDePropuestasDeProponente
     */
    private String nickProponente;
    private IPropCat ICP;
    private List<DtinfoPropuesta> propuestas;
    private DtinfoPropuesta propSeleccionada;

    public ListaDePropuestasDeProponente(String proponente, String title){
        super(title);
        Fabrica fab = Fabrica.getInstance();
        this.ICP = fab.getControladorPropCat();
        initComponents();
        jPanelColaboradores.setVisible(false);
        this.nickProponente = proponente;
        propuestas = this.ICP.ListarPropuestasDeProponenteX(nickProponente);
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setRowCount(0);
        for (int i = 0; i < propuestas.size(); i++) {
            DtinfoPropuesta p = propuestas.get(i);
            Date f = (Date) p.getFechaReal().getTime();
            SimpleDateFormat fecha = new SimpleDateFormat("dd/MMM/yyyy");
            EstadoPropuesta estado = ICP.verEstadoPropuesta(p.getTitulo());
            Object[] dat = {p.getTitulo(), p.getTipoEspec(), estado.getEstado(), p.getMonto(), p.getLugar(), fecha.format(f)};
            modelo.addRow(dat);
        }
        jComboBox.addItem("Todas");
        jComboBox.addItem("Canceladas");
        jComboBox.addItem("Publicadas");
        jComboBox.addItem("En financiacion");
        jComboBox.addItem("Financiada");
        jComboBox.addItem("No financiada");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jComboBox = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jPanelColaboradores = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Titulo", "Categoria", "Estado", "Monto Total", "Lugar", "Fecha Realizacion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jLabel1.setText("Estado de propuesta");

        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxMouseClicked(evt);
            }
        });
        jComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxActionPerformed(evt);
            }
        });

        jButton2.setText("Ver");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jButton1)
                            .addComponent(jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 260, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jLabel2.setText("Colaboradores");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "NickName", "Nombre", "Apellido", "Correo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanelColaboradoresLayout = new javax.swing.GroupLayout(jPanelColaboradores);
        jPanelColaboradores.setLayout(jPanelColaboradoresLayout);
        jPanelColaboradoresLayout.setHorizontalGroup(
            jPanelColaboradoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelColaboradoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelColaboradoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanelColaboradoresLayout.createSequentialGroup()
                        .addGap(659, 659, 659)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
                    .addGroup(jPanelColaboradoresLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelColaboradoresLayout.setVerticalGroup(
            jPanelColaboradoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelColaboradoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelColaboradores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelColaboradores, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable2.getModel();
        modelo.setRowCount(0);
        int seleccion = jTable1.rowAtPoint(evt.getPoint());
        String titulo = (String) jTable1.getValueAt(seleccion, 0);
        List<DtinfoColaborador> colaboradores = new ArrayList<>();
        colaboradores = ICP.ListarColaboradores(titulo);
        if (colaboradores.size() == 0) {
            JOptionPane.showMessageDialog(null, "Esta propuesta no obtiene colaboradores");
            return;
        }
        jPanelColaboradores.setVisible(true);
        for (int i = 0; i < colaboradores.size(); i++) {
            DtinfoColaborador dtC = colaboradores.get(i);
            Date f = (Date) dtC.getFechaN().getTime();
            String fecha = new SimpleDateFormat("dd/MMM/yyyy").format(f);
            Object[] dat = {dtC.getNickname(), dtC.getNombre(), dtC.getApellido(), dtC.getCorreo(), fecha};
            modelo.addRow(dat);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ConsultarPerfilProponentes p = new ConsultarPerfilProponentes();
        Escritorio.add(p);
        p.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxActionPerformed

    private void jComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxMouseClicked
//        String seleccion = jComboBox.getSelectedItem().toString();
//        propuestas = this.ICP.ListarPropuestasDeProponenteX(nickProponente);
//        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
//        if (seleccion == "Todas") {
//            modelo.setRowCount(0);
//            for (int i = 0; i < propuestas.size(); i++) {
//                DtinfoPropuesta p = propuestas.get(i);
//                Date f = (Date) p.getFechaReal().getTime();
//                SimpleDateFormat fecha = new SimpleDateFormat("dd/MMM/yyyy");
//                EstadoPropuesta estado = ICP.verEstadoPropuesta(p.getTitulo());
//               Object[] dat = {p.getTitulo(), p.getTipoEspec(), estado.getEstado(), p.getMonto(), p.getLugar(), fecha.format(f)};
//                modelo.addRow(dat);
//            }
//        } else {
//            if (seleccion.equals("Canceladas")) {
//                seleccion = "Cancelada";
//            } else if (seleccion.equals("Publicadas")) {
//                seleccion = "Publicada";
//            } else if (seleccion.equals("En financiacion")) {
//                seleccion = "enFinanciacion";
//            } else if (seleccion.equals("Financiada")) {
//                seleccion = "Fiananciada";
//            } else if (seleccion.equals("No finalizada")) {
//                seleccion = "noFinanciada";
//            }
//
//            modelo.setRowCount(0);
//            for (int x = 0; x < propuestas.size(); x++) {
//                if (propuestas.get(x).getEstado().equals(seleccion)) {
//                    DtinfoPropuesta p = propuestas.get(x);
//                    Date f = (Date) p.getFechaReal().getTime();
//                    SimpleDateFormat fecha = new SimpleDateFormat("dd/MMM/yyyy");
//                    EstadoPropuesta estado = ICP.verEstadoPropuesta(p.getTitulo());
//                    Object[] dat = {p.getTitulo(), p.getTipoEspec(), estado.getEstado(), p.getMonto(), p.getLugar(), fecha.format(f)};
//                    modelo.addRow(dat);
//                }
//            }
//        }
    }//GEN-LAST:event_jComboBoxMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String seleccion = jComboBox.getSelectedItem().toString();
        propuestas = this.ICP.ListarPropuestasDeProponenteX(nickProponente);
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        if (seleccion == "Todas") {
            modelo.setRowCount(0);
            for (int i = 0; i < propuestas.size(); i++) {
                DtinfoPropuesta p = propuestas.get(i);
                Date f = (Date) p.getFechaReal().getTime();
                SimpleDateFormat fecha = new SimpleDateFormat("dd/MMM/yyyy");
                EstadoPropuesta estado = ICP.verEstadoPropuesta(p.getTitulo());
                Object[] dat = {p.getTitulo(), p.getTipoEspec(), estado.getEstado(), p.getMonto(), p.getLugar(), fecha.format(f)};
                modelo.addRow(dat);
            }
        } else {
            if (seleccion.equals("Canceladas")) {
                seleccion = "Cancelada";
            } else if (seleccion.equals("Publicadas")) {
                seleccion = "Publicada";
            } else if (seleccion.equals("En financiacion")) {
                seleccion = "enFinanciacion";
            } else if (seleccion.equals("Financiada")) {
                seleccion = "Financiada";
            } else if (seleccion.equals("No finalizada")) {
                seleccion = "noFinanciada";
            }

            modelo.setRowCount(0);
            for (int x = 0; x < propuestas.size(); x++) {
                if (seleccion.equals(propuestas.get(x).getEstado())) {
                    DtinfoPropuesta p = propuestas.get(x);
                    Date f = (Date) p.getFechaReal().getTime();
                    SimpleDateFormat fecha = new SimpleDateFormat("dd/MMM/yyyy");
                    EstadoPropuesta estado = ICP.verEstadoPropuesta(p.getTitulo());
                    Object[] dat = {p.getTitulo(), p.getTipoEspec(), estado.getEstado(), p.getMonto(), p.getLugar(), fecha.format(f)};
                    modelo.addRow(dat);
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelColaboradores;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
